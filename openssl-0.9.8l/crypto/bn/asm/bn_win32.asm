	; Don't even think of reading this code
	; It was automatically generated by bn-586.pl
	; Which is a perl program used to generate the x86 assember for
	; any of ELF, a.out, COFF, Win32, ...
	; eric <eay@cryptsoft.com>
	; 
%ifdef __omf__
section	code	use32 class=code
%else
section	.text
%endif
extern	_OPENSSL_ia32cap_P
global	_bn_mul_add_words
_bn_mul_add_words:
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	xor	esi,		esi
	mov	edi,		DWORD [20+esp]
	mov	ecx,		DWORD [28+esp]
	mov	ebx,		DWORD [24+esp]
	and	ecx,		4294967288
	mov	ebp,		DWORD [32+esp]
	push	ecx
	jz NEAR	@L000maw_finish
	lea	eax,		[_OPENSSL_ia32cap_P]
	bt	DWORD [eax],	26
	jnc NEAR	@L001maw_loop
	movd	mm0,		ebp
	pxor	mm1,		mm1
@L002maw_sse2_loop:
	movd	mm3,		DWORD [edi]
	paddq	mm1,		mm3
	movd	mm2,		DWORD [ebx]
	pmuludq	mm2,		mm0
	movd	mm4,		DWORD [4+ebx]
	pmuludq	mm4,		mm0
	movd	mm6,		DWORD [8+ebx]
	pmuludq	mm6,		mm0
	movd	mm7,		DWORD [12+ebx]
	pmuludq	mm7,		mm0
	paddq	mm1,		mm2
	movd	mm3,		DWORD [4+edi]
	paddq	mm3,		mm4
	movd	mm5,		DWORD [8+edi]
	paddq	mm5,		mm6
	movd	mm4,		DWORD [12+edi]
	paddq	mm7,		mm4
	movd	DWORD [edi],	mm1
	movd	mm2,		DWORD [16+ebx]
	pmuludq	mm2,		mm0
	psrlq	mm1,		32
	movd	mm4,		DWORD [20+ebx]
	pmuludq	mm4,		mm0
	paddq	mm1,		mm3
	movd	mm6,		DWORD [24+ebx]
	pmuludq	mm6,		mm0
	movd	DWORD [4+edi],	mm1
	psrlq	mm1,		32
	movd	mm3,		DWORD [28+ebx]
	add	ebx,		32
	pmuludq	mm3,		mm0
	paddq	mm1,		mm5
	movd	mm5,		DWORD [16+edi]
	paddq	mm2,		mm5
	movd	DWORD [8+edi],	mm1
	psrlq	mm1,		32
	paddq	mm1,		mm7
	movd	mm5,		DWORD [20+edi]
	paddq	mm4,		mm5
	movd	DWORD [12+edi],	mm1
	psrlq	mm1,		32
	paddq	mm1,		mm2
	movd	mm5,		DWORD [24+edi]
	paddq	mm6,		mm5
	movd	DWORD [16+edi],	mm1
	psrlq	mm1,		32
	paddq	mm1,		mm4
	movd	mm5,		DWORD [28+edi]
	paddq	mm3,		mm5
	movd	DWORD [20+edi],	mm1
	psrlq	mm1,		32
	paddq	mm1,		mm6
	movd	DWORD [24+edi],	mm1
	psrlq	mm1,		32
	paddq	mm1,		mm3
	movd	DWORD [28+edi],	mm1
	add	edi,		32
	psrlq	mm1,		32
	sub	ecx,		8
	jnz NEAR	@L002maw_sse2_loop
	movd	esi,		mm1
	emms
	jmp	@L000maw_finish
@L001maw_loop:
	mov	DWORD [esp],	ecx
	; Round 0
	mov	eax,		DWORD [ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [edi],	eax
	mov	esi,		edx
	; Round 4
	mov	eax,		DWORD [4+ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [4+edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [4+edi],	eax
	mov	esi,		edx
	; Round 8
	mov	eax,		DWORD [8+ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [8+edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [8+edi],	eax
	mov	esi,		edx
	; Round 12
	mov	eax,		DWORD [12+ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [12+edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [12+edi],	eax
	mov	esi,		edx
	; Round 16
	mov	eax,		DWORD [16+ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [16+edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [16+edi],	eax
	mov	esi,		edx
	; Round 20
	mov	eax,		DWORD [20+ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [20+edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [20+edi],	eax
	mov	esi,		edx
	; Round 24
	mov	eax,		DWORD [24+ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [24+edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [24+edi],	eax
	mov	esi,		edx
	; Round 28
	mov	eax,		DWORD [28+ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [28+edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [28+edi],	eax
	mov	esi,		edx
	; 
	mov	ecx,		DWORD [esp]
	add	ebx,		32
	add	edi,		32
	sub	ecx,		8
	jnz NEAR	@L001maw_loop
@L000maw_finish:
	mov	ecx,		DWORD [32+esp]
	and	ecx,		7
	jnz NEAR	@L003maw_finish2
	jmp	@L004maw_end
@L003maw_finish2:
	; Tail Round 0
	mov	eax,		DWORD [ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	dec	ecx
	mov	DWORD [edi],	eax
	mov	esi,		edx
	jz NEAR	@L004maw_end
	; Tail Round 1
	mov	eax,		DWORD [4+ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [4+edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	dec	ecx
	mov	DWORD [4+edi],	eax
	mov	esi,		edx
	jz NEAR	@L004maw_end
	; Tail Round 2
	mov	eax,		DWORD [8+ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [8+edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	dec	ecx
	mov	DWORD [8+edi],	eax
	mov	esi,		edx
	jz NEAR	@L004maw_end
	; Tail Round 3
	mov	eax,		DWORD [12+ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [12+edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	dec	ecx
	mov	DWORD [12+edi],	eax
	mov	esi,		edx
	jz NEAR	@L004maw_end
	; Tail Round 4
	mov	eax,		DWORD [16+ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [16+edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	dec	ecx
	mov	DWORD [16+edi],	eax
	mov	esi,		edx
	jz NEAR	@L004maw_end
	; Tail Round 5
	mov	eax,		DWORD [20+ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [20+edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	dec	ecx
	mov	DWORD [20+edi],	eax
	mov	esi,		edx
	jz NEAR	@L004maw_end
	; Tail Round 6
	mov	eax,		DWORD [24+ebx]
	mul	ebp
	add	eax,		esi
	mov	esi,		DWORD [24+edi]
	adc	edx,		0
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [24+edi],	eax
	mov	esi,		edx
@L004maw_end:
	mov	eax,		esi
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
global	_bn_mul_words
_bn_mul_words:
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	xor	esi,		esi
	mov	edi,		DWORD [20+esp]
	mov	ebx,		DWORD [24+esp]
	mov	ebp,		DWORD [28+esp]
	mov	ecx,		DWORD [32+esp]
	and	ebp,		4294967288
	jz NEAR	@L005mw_finish
@L006mw_loop:
	; Round 0
	mov	eax,		DWORD [ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [edi],	eax
	mov	esi,		edx
	; Round 4
	mov	eax,		DWORD [4+ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [4+edi],	eax
	mov	esi,		edx
	; Round 8
	mov	eax,		DWORD [8+ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [8+edi],	eax
	mov	esi,		edx
	; Round 12
	mov	eax,		DWORD [12+ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [12+edi],	eax
	mov	esi,		edx
	; Round 16
	mov	eax,		DWORD [16+ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [16+edi],	eax
	mov	esi,		edx
	; Round 20
	mov	eax,		DWORD [20+ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [20+edi],	eax
	mov	esi,		edx
	; Round 24
	mov	eax,		DWORD [24+ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [24+edi],	eax
	mov	esi,		edx
	; Round 28
	mov	eax,		DWORD [28+ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [28+edi],	eax
	mov	esi,		edx
	; 
	add	ebx,		32
	add	edi,		32
	sub	ebp,		8
	jz NEAR	@L005mw_finish
	jmp	@L006mw_loop
@L005mw_finish:
	mov	ebp,		DWORD [28+esp]
	and	ebp,		7
	jnz NEAR	@L007mw_finish2
	jmp	@L008mw_end
@L007mw_finish2:
	; Tail Round 0
	mov	eax,		DWORD [ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [edi],	eax
	mov	esi,		edx
	dec	ebp
	jz NEAR	@L008mw_end
	; Tail Round 1
	mov	eax,		DWORD [4+ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [4+edi],	eax
	mov	esi,		edx
	dec	ebp
	jz NEAR	@L008mw_end
	; Tail Round 2
	mov	eax,		DWORD [8+ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [8+edi],	eax
	mov	esi,		edx
	dec	ebp
	jz NEAR	@L008mw_end
	; Tail Round 3
	mov	eax,		DWORD [12+ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [12+edi],	eax
	mov	esi,		edx
	dec	ebp
	jz NEAR	@L008mw_end
	; Tail Round 4
	mov	eax,		DWORD [16+ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [16+edi],	eax
	mov	esi,		edx
	dec	ebp
	jz NEAR	@L008mw_end
	; Tail Round 5
	mov	eax,		DWORD [20+ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [20+edi],	eax
	mov	esi,		edx
	dec	ebp
	jz NEAR	@L008mw_end
	; Tail Round 6
	mov	eax,		DWORD [24+ebx]
	mul	ecx
	add	eax,		esi
	adc	edx,		0
	mov	DWORD [24+edi],	eax
	mov	esi,		edx
@L008mw_end:
	mov	eax,		esi
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
global	_bn_sqr_words
_bn_sqr_words:
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	mov	esi,		DWORD [20+esp]
	mov	edi,		DWORD [24+esp]
	mov	ebx,		DWORD [28+esp]
	and	ebx,		4294967288
	jz NEAR	@L009sw_finish
@L010sw_loop:
	; Round 0
	mov	eax,		DWORD [edi]
	mul	eax
	mov	DWORD [esi],	eax
	mov	DWORD [4+esi],	edx
	; Round 4
	mov	eax,		DWORD [4+edi]
	mul	eax
	mov	DWORD [8+esi],	eax
	mov	DWORD [12+esi],	edx
	; Round 8
	mov	eax,		DWORD [8+edi]
	mul	eax
	mov	DWORD [16+esi],	eax
	mov	DWORD [20+esi],	edx
	; Round 12
	mov	eax,		DWORD [12+edi]
	mul	eax
	mov	DWORD [24+esi],	eax
	mov	DWORD [28+esi],	edx
	; Round 16
	mov	eax,		DWORD [16+edi]
	mul	eax
	mov	DWORD [32+esi],	eax
	mov	DWORD [36+esi],	edx
	; Round 20
	mov	eax,		DWORD [20+edi]
	mul	eax
	mov	DWORD [40+esi],	eax
	mov	DWORD [44+esi],	edx
	; Round 24
	mov	eax,		DWORD [24+edi]
	mul	eax
	mov	DWORD [48+esi],	eax
	mov	DWORD [52+esi],	edx
	; Round 28
	mov	eax,		DWORD [28+edi]
	mul	eax
	mov	DWORD [56+esi],	eax
	mov	DWORD [60+esi],	edx
	; 
	add	edi,		32
	add	esi,		64
	sub	ebx,		8
	jnz NEAR	@L010sw_loop
@L009sw_finish:
	mov	ebx,		DWORD [28+esp]
	and	ebx,		7
	jz NEAR	@L011sw_end
	; Tail Round 0
	mov	eax,		DWORD [edi]
	mul	eax
	mov	DWORD [esi],	eax
	dec	ebx
	mov	DWORD [4+esi],	edx
	jz NEAR	@L011sw_end
	; Tail Round 1
	mov	eax,		DWORD [4+edi]
	mul	eax
	mov	DWORD [8+esi],	eax
	dec	ebx
	mov	DWORD [12+esi],	edx
	jz NEAR	@L011sw_end
	; Tail Round 2
	mov	eax,		DWORD [8+edi]
	mul	eax
	mov	DWORD [16+esi],	eax
	dec	ebx
	mov	DWORD [20+esi],	edx
	jz NEAR	@L011sw_end
	; Tail Round 3
	mov	eax,		DWORD [12+edi]
	mul	eax
	mov	DWORD [24+esi],	eax
	dec	ebx
	mov	DWORD [28+esi],	edx
	jz NEAR	@L011sw_end
	; Tail Round 4
	mov	eax,		DWORD [16+edi]
	mul	eax
	mov	DWORD [32+esi],	eax
	dec	ebx
	mov	DWORD [36+esi],	edx
	jz NEAR	@L011sw_end
	; Tail Round 5
	mov	eax,		DWORD [20+edi]
	mul	eax
	mov	DWORD [40+esi],	eax
	dec	ebx
	mov	DWORD [44+esi],	edx
	jz NEAR	@L011sw_end
	; Tail Round 6
	mov	eax,		DWORD [24+edi]
	mul	eax
	mov	DWORD [48+esi],	eax
	mov	DWORD [52+esi],	edx
@L011sw_end:
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
global	_bn_div_words
_bn_div_words:
	push	ebp
	push	ebx
	push	esi
	push	edi
	mov	edx,		DWORD [20+esp]
	mov	eax,		DWORD [24+esp]
	mov	ebx,		DWORD [28+esp]
	div	ebx
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
global	_bn_add_words
_bn_add_words:
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	mov	ebx,		DWORD [20+esp]
	mov	esi,		DWORD [24+esp]
	mov	edi,		DWORD [28+esp]
	mov	ebp,		DWORD [32+esp]
	xor	eax,		eax
	and	ebp,		4294967288
	jz NEAR	@L012aw_finish
@L013aw_loop:
	; Round 0
	mov	ecx,		DWORD [esi]
	mov	edx,		DWORD [edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD [ebx],	ecx
	; Round 1
	mov	ecx,		DWORD [4+esi]
	mov	edx,		DWORD [4+edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD [4+ebx],	ecx
	; Round 2
	mov	ecx,		DWORD [8+esi]
	mov	edx,		DWORD [8+edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD [8+ebx],	ecx
	; Round 3
	mov	ecx,		DWORD [12+esi]
	mov	edx,		DWORD [12+edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD [12+ebx],	ecx
	; Round 4
	mov	ecx,		DWORD [16+esi]
	mov	edx,		DWORD [16+edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD [16+ebx],	ecx
	; Round 5
	mov	ecx,		DWORD [20+esi]
	mov	edx,		DWORD [20+edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD [20+ebx],	ecx
	; Round 6
	mov	ecx,		DWORD [24+esi]
	mov	edx,		DWORD [24+edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD [24+ebx],	ecx
	; Round 7
	mov	ecx,		DWORD [28+esi]
	mov	edx,		DWORD [28+edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD [28+ebx],	ecx
	; 
	add	esi,		32
	add	edi,		32
	add	ebx,		32
	sub	ebp,		8
	jnz NEAR	@L013aw_loop
@L012aw_finish:
	mov	ebp,		DWORD [32+esp]
	and	ebp,		7
	jz NEAR	@L014aw_end
	; Tail Round 0
	mov	ecx,		DWORD [esi]
	mov	edx,		DWORD [edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [ebx],	ecx
	jz NEAR	@L014aw_end
	; Tail Round 1
	mov	ecx,		DWORD [4+esi]
	mov	edx,		DWORD [4+edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [4+ebx],	ecx
	jz NEAR	@L014aw_end
	; Tail Round 2
	mov	ecx,		DWORD [8+esi]
	mov	edx,		DWORD [8+edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [8+ebx],	ecx
	jz NEAR	@L014aw_end
	; Tail Round 3
	mov	ecx,		DWORD [12+esi]
	mov	edx,		DWORD [12+edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [12+ebx],	ecx
	jz NEAR	@L014aw_end
	; Tail Round 4
	mov	ecx,		DWORD [16+esi]
	mov	edx,		DWORD [16+edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [16+ebx],	ecx
	jz NEAR	@L014aw_end
	; Tail Round 5
	mov	ecx,		DWORD [20+esi]
	mov	edx,		DWORD [20+edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [20+ebx],	ecx
	jz NEAR	@L014aw_end
	; Tail Round 6
	mov	ecx,		DWORD [24+esi]
	mov	edx,		DWORD [24+edi]
	add	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	add	ecx,		edx
	adc	eax,		0
	mov	DWORD [24+ebx],	ecx
@L014aw_end:
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
global	_bn_sub_words
_bn_sub_words:
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	mov	ebx,		DWORD [20+esp]
	mov	esi,		DWORD [24+esp]
	mov	edi,		DWORD [28+esp]
	mov	ebp,		DWORD [32+esp]
	xor	eax,		eax
	and	ebp,		4294967288
	jz NEAR	@L015aw_finish
@L016aw_loop:
	; Round 0
	mov	ecx,		DWORD [esi]
	mov	edx,		DWORD [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [ebx],	ecx
	; Round 1
	mov	ecx,		DWORD [4+esi]
	mov	edx,		DWORD [4+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [4+ebx],	ecx
	; Round 2
	mov	ecx,		DWORD [8+esi]
	mov	edx,		DWORD [8+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [8+ebx],	ecx
	; Round 3
	mov	ecx,		DWORD [12+esi]
	mov	edx,		DWORD [12+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [12+ebx],	ecx
	; Round 4
	mov	ecx,		DWORD [16+esi]
	mov	edx,		DWORD [16+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [16+ebx],	ecx
	; Round 5
	mov	ecx,		DWORD [20+esi]
	mov	edx,		DWORD [20+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [20+ebx],	ecx
	; Round 6
	mov	ecx,		DWORD [24+esi]
	mov	edx,		DWORD [24+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [24+ebx],	ecx
	; Round 7
	mov	ecx,		DWORD [28+esi]
	mov	edx,		DWORD [28+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [28+ebx],	ecx
	; 
	add	esi,		32
	add	edi,		32
	add	ebx,		32
	sub	ebp,		8
	jnz NEAR	@L016aw_loop
@L015aw_finish:
	mov	ebp,		DWORD [32+esp]
	and	ebp,		7
	jz NEAR	@L017aw_end
	; Tail Round 0
	mov	ecx,		DWORD [esi]
	mov	edx,		DWORD [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [ebx],	ecx
	jz NEAR	@L017aw_end
	; Tail Round 1
	mov	ecx,		DWORD [4+esi]
	mov	edx,		DWORD [4+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [4+ebx],	ecx
	jz NEAR	@L017aw_end
	; Tail Round 2
	mov	ecx,		DWORD [8+esi]
	mov	edx,		DWORD [8+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [8+ebx],	ecx
	jz NEAR	@L017aw_end
	; Tail Round 3
	mov	ecx,		DWORD [12+esi]
	mov	edx,		DWORD [12+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [12+ebx],	ecx
	jz NEAR	@L017aw_end
	; Tail Round 4
	mov	ecx,		DWORD [16+esi]
	mov	edx,		DWORD [16+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [16+ebx],	ecx
	jz NEAR	@L017aw_end
	; Tail Round 5
	mov	ecx,		DWORD [20+esi]
	mov	edx,		DWORD [20+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [20+ebx],	ecx
	jz NEAR	@L017aw_end
	; Tail Round 6
	mov	ecx,		DWORD [24+esi]
	mov	edx,		DWORD [24+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [24+ebx],	ecx
@L017aw_end:
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
global	_bn_sub_part_words
_bn_sub_part_words:
	push	ebp
	push	ebx
	push	esi
	push	edi
	; 
	mov	ebx,		DWORD [20+esp]
	mov	esi,		DWORD [24+esp]
	mov	edi,		DWORD [28+esp]
	mov	ebp,		DWORD [32+esp]
	xor	eax,		eax
	and	ebp,		4294967288
	jz NEAR	@L018aw_finish
@L019aw_loop:
	; Round 0
	mov	ecx,		DWORD [esi]
	mov	edx,		DWORD [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [ebx],	ecx
	; Round 1
	mov	ecx,		DWORD [4+esi]
	mov	edx,		DWORD [4+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [4+ebx],	ecx
	; Round 2
	mov	ecx,		DWORD [8+esi]
	mov	edx,		DWORD [8+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [8+ebx],	ecx
	; Round 3
	mov	ecx,		DWORD [12+esi]
	mov	edx,		DWORD [12+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [12+ebx],	ecx
	; Round 4
	mov	ecx,		DWORD [16+esi]
	mov	edx,		DWORD [16+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [16+ebx],	ecx
	; Round 5
	mov	ecx,		DWORD [20+esi]
	mov	edx,		DWORD [20+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [20+ebx],	ecx
	; Round 6
	mov	ecx,		DWORD [24+esi]
	mov	edx,		DWORD [24+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [24+ebx],	ecx
	; Round 7
	mov	ecx,		DWORD [28+esi]
	mov	edx,		DWORD [28+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [28+ebx],	ecx
	; 
	add	esi,		32
	add	edi,		32
	add	ebx,		32
	sub	ebp,		8
	jnz NEAR	@L019aw_loop
@L018aw_finish:
	mov	ebp,		DWORD [32+esp]
	and	ebp,		7
	jz NEAR	@L020aw_end
	; Tail Round 0
	mov	ecx,		DWORD [esi]
	mov	edx,		DWORD [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [ebx],	ecx
	add	esi,		4
	add	edi,		4
	add	ebx,		4
	dec	ebp
	jz NEAR	@L020aw_end
	; Tail Round 1
	mov	ecx,		DWORD [esi]
	mov	edx,		DWORD [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [ebx],	ecx
	add	esi,		4
	add	edi,		4
	add	ebx,		4
	dec	ebp
	jz NEAR	@L020aw_end
	; Tail Round 2
	mov	ecx,		DWORD [esi]
	mov	edx,		DWORD [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [ebx],	ecx
	add	esi,		4
	add	edi,		4
	add	ebx,		4
	dec	ebp
	jz NEAR	@L020aw_end
	; Tail Round 3
	mov	ecx,		DWORD [esi]
	mov	edx,		DWORD [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [ebx],	ecx
	add	esi,		4
	add	edi,		4
	add	ebx,		4
	dec	ebp
	jz NEAR	@L020aw_end
	; Tail Round 4
	mov	ecx,		DWORD [esi]
	mov	edx,		DWORD [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [ebx],	ecx
	add	esi,		4
	add	edi,		4
	add	ebx,		4
	dec	ebp
	jz NEAR	@L020aw_end
	; Tail Round 5
	mov	ecx,		DWORD [esi]
	mov	edx,		DWORD [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [ebx],	ecx
	add	esi,		4
	add	edi,		4
	add	ebx,		4
	dec	ebp
	jz NEAR	@L020aw_end
	; Tail Round 6
	mov	ecx,		DWORD [esi]
	mov	edx,		DWORD [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [ebx],	ecx
	add	esi,		4
	add	edi,		4
	add	ebx,		4
@L020aw_end:
	cmp	DWORD [36+esp],	0
	je NEAR	@L021pw_end
	mov	ebp,		DWORD [36+esp]
	cmp	ebp,		0
	je NEAR	@L021pw_end
	jge NEAR	@L022pw_pos
	; pw_neg
	mov	edx,		0
	sub	edx,		ebp
	mov	ebp,		edx
	and	ebp,		4294967288
	jz NEAR	@L023pw_neg_finish
@L024pw_neg_loop:
	; dl<0 Round 0
	mov	ecx,		0
	mov	edx,		DWORD [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [ebx],	ecx
	; dl<0 Round 1
	mov	ecx,		0
	mov	edx,		DWORD [4+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [4+ebx],	ecx
	; dl<0 Round 2
	mov	ecx,		0
	mov	edx,		DWORD [8+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [8+ebx],	ecx
	; dl<0 Round 3
	mov	ecx,		0
	mov	edx,		DWORD [12+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [12+ebx],	ecx
	; dl<0 Round 4
	mov	ecx,		0
	mov	edx,		DWORD [16+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [16+ebx],	ecx
	; dl<0 Round 5
	mov	ecx,		0
	mov	edx,		DWORD [20+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [20+ebx],	ecx
	; dl<0 Round 6
	mov	ecx,		0
	mov	edx,		DWORD [24+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [24+ebx],	ecx
	; dl<0 Round 7
	mov	ecx,		0
	mov	edx,		DWORD [28+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [28+ebx],	ecx
	; 
	add	edi,		32
	add	ebx,		32
	sub	ebp,		8
	jnz NEAR	@L024pw_neg_loop
@L023pw_neg_finish:
	mov	edx,		DWORD [36+esp]
	mov	ebp,		0
	sub	ebp,		edx
	and	ebp,		7
	jz NEAR	@L021pw_end
	; dl<0 Tail Round 0
	mov	ecx,		0
	mov	edx,		DWORD [edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [ebx],	ecx
	jz NEAR	@L021pw_end
	; dl<0 Tail Round 1
	mov	ecx,		0
	mov	edx,		DWORD [4+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [4+ebx],	ecx
	jz NEAR	@L021pw_end
	; dl<0 Tail Round 2
	mov	ecx,		0
	mov	edx,		DWORD [8+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [8+ebx],	ecx
	jz NEAR	@L021pw_end
	; dl<0 Tail Round 3
	mov	ecx,		0
	mov	edx,		DWORD [12+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [12+ebx],	ecx
	jz NEAR	@L021pw_end
	; dl<0 Tail Round 4
	mov	ecx,		0
	mov	edx,		DWORD [16+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [16+ebx],	ecx
	jz NEAR	@L021pw_end
	; dl<0 Tail Round 5
	mov	ecx,		0
	mov	edx,		DWORD [20+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	dec	ebp
	mov	DWORD [20+ebx],	ecx
	jz NEAR	@L021pw_end
	; dl<0 Tail Round 6
	mov	ecx,		0
	mov	edx,		DWORD [24+edi]
	sub	ecx,		eax
	mov	eax,		0
	adc	eax,		eax
	sub	ecx,		edx
	adc	eax,		0
	mov	DWORD [24+ebx],	ecx
	jmp	@L021pw_end
@L022pw_pos:
	and	ebp,		4294967288
	jz NEAR	@L025pw_pos_finish
@L026pw_pos_loop:
	; dl>0 Round 0
	mov	ecx,		DWORD [esi]
	sub	ecx,		eax
	mov	DWORD [ebx],	ecx
	jnc NEAR	@L027pw_nc0
	; dl>0 Round 1
	mov	ecx,		DWORD [4+esi]
	sub	ecx,		eax
	mov	DWORD [4+ebx],	ecx
	jnc NEAR	@L028pw_nc1
	; dl>0 Round 2
	mov	ecx,		DWORD [8+esi]
	sub	ecx,		eax
	mov	DWORD [8+ebx],	ecx
	jnc NEAR	@L029pw_nc2
	; dl>0 Round 3
	mov	ecx,		DWORD [12+esi]
	sub	ecx,		eax
	mov	DWORD [12+ebx],	ecx
	jnc NEAR	@L030pw_nc3
	; dl>0 Round 4
	mov	ecx,		DWORD [16+esi]
	sub	ecx,		eax
	mov	DWORD [16+ebx],	ecx
	jnc NEAR	@L031pw_nc4
	; dl>0 Round 5
	mov	ecx,		DWORD [20+esi]
	sub	ecx,		eax
	mov	DWORD [20+ebx],	ecx
	jnc NEAR	@L032pw_nc5
	; dl>0 Round 6
	mov	ecx,		DWORD [24+esi]
	sub	ecx,		eax
	mov	DWORD [24+ebx],	ecx
	jnc NEAR	@L033pw_nc6
	; dl>0 Round 7
	mov	ecx,		DWORD [28+esi]
	sub	ecx,		eax
	mov	DWORD [28+ebx],	ecx
	jnc NEAR	@L034pw_nc7
	; 
	add	esi,		32
	add	ebx,		32
	sub	ebp,		8
	jnz NEAR	@L026pw_pos_loop
@L025pw_pos_finish:
	mov	ebp,		DWORD [36+esp]
	and	ebp,		7
	jz NEAR	@L021pw_end
	; dl>0 Tail Round 0
	mov	ecx,		DWORD [esi]
	sub	ecx,		eax
	mov	DWORD [ebx],	ecx
	jnc NEAR	@L035pw_tail_nc0
	dec	ebp
	jz NEAR	@L021pw_end
	; dl>0 Tail Round 1
	mov	ecx,		DWORD [4+esi]
	sub	ecx,		eax
	mov	DWORD [4+ebx],	ecx
	jnc NEAR	@L036pw_tail_nc1
	dec	ebp
	jz NEAR	@L021pw_end
	; dl>0 Tail Round 2
	mov	ecx,		DWORD [8+esi]
	sub	ecx,		eax
	mov	DWORD [8+ebx],	ecx
	jnc NEAR	@L037pw_tail_nc2
	dec	ebp
	jz NEAR	@L021pw_end
	; dl>0 Tail Round 3
	mov	ecx,		DWORD [12+esi]
	sub	ecx,		eax
	mov	DWORD [12+ebx],	ecx
	jnc NEAR	@L038pw_tail_nc3
	dec	ebp
	jz NEAR	@L021pw_end
	; dl>0 Tail Round 4
	mov	ecx,		DWORD [16+esi]
	sub	ecx,		eax
	mov	DWORD [16+ebx],	ecx
	jnc NEAR	@L039pw_tail_nc4
	dec	ebp
	jz NEAR	@L021pw_end
	; dl>0 Tail Round 5
	mov	ecx,		DWORD [20+esi]
	sub	ecx,		eax
	mov	DWORD [20+ebx],	ecx
	jnc NEAR	@L040pw_tail_nc5
	dec	ebp
	jz NEAR	@L021pw_end
	; dl>0 Tail Round 6
	mov	ecx,		DWORD [24+esi]
	sub	ecx,		eax
	mov	DWORD [24+ebx],	ecx
	jnc NEAR	@L041pw_tail_nc6
	mov	eax,		1
	jmp	@L021pw_end
@L042pw_nc_loop:
	mov	ecx,		DWORD [esi]
	mov	DWORD [ebx],	ecx
@L027pw_nc0:
	mov	ecx,		DWORD [4+esi]
	mov	DWORD [4+ebx],	ecx
@L028pw_nc1:
	mov	ecx,		DWORD [8+esi]
	mov	DWORD [8+ebx],	ecx
@L029pw_nc2:
	mov	ecx,		DWORD [12+esi]
	mov	DWORD [12+ebx],	ecx
@L030pw_nc3:
	mov	ecx,		DWORD [16+esi]
	mov	DWORD [16+ebx],	ecx
@L031pw_nc4:
	mov	ecx,		DWORD [20+esi]
	mov	DWORD [20+ebx],	ecx
@L032pw_nc5:
	mov	ecx,		DWORD [24+esi]
	mov	DWORD [24+ebx],	ecx
@L033pw_nc6:
	mov	ecx,		DWORD [28+esi]
	mov	DWORD [28+ebx],	ecx
@L034pw_nc7:
	; 
	add	esi,		32
	add	ebx,		32
	sub	ebp,		8
	jnz NEAR	@L042pw_nc_loop
	mov	ebp,		DWORD [36+esp]
	and	ebp,		7
	jz NEAR	@L043pw_nc_end
	mov	ecx,		DWORD [esi]
	mov	DWORD [ebx],	ecx
@L035pw_tail_nc0:
	dec	ebp
	jz NEAR	@L043pw_nc_end
	mov	ecx,		DWORD [4+esi]
	mov	DWORD [4+ebx],	ecx
@L036pw_tail_nc1:
	dec	ebp
	jz NEAR	@L043pw_nc_end
	mov	ecx,		DWORD [8+esi]
	mov	DWORD [8+ebx],	ecx
@L037pw_tail_nc2:
	dec	ebp
	jz NEAR	@L043pw_nc_end
	mov	ecx,		DWORD [12+esi]
	mov	DWORD [12+ebx],	ecx
@L038pw_tail_nc3:
	dec	ebp
	jz NEAR	@L043pw_nc_end
	mov	ecx,		DWORD [16+esi]
	mov	DWORD [16+ebx],	ecx
@L039pw_tail_nc4:
	dec	ebp
	jz NEAR	@L043pw_nc_end
	mov	ecx,		DWORD [20+esi]
	mov	DWORD [20+ebx],	ecx
@L040pw_tail_nc5:
	dec	ebp
	jz NEAR	@L043pw_nc_end
	mov	ecx,		DWORD [24+esi]
	mov	DWORD [24+ebx],	ecx
@L041pw_tail_nc6:
@L043pw_nc_end:
	mov	eax,		0
@L021pw_end:
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret
